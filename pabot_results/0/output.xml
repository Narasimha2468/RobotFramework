<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.8.2 on win32)" generated="20240605 18:01:03.819" rpa="false" schemaversion="3">
<suite id="s1" name="Excel Driven Framework" source="D:\automation_project\Excel_Driven_Framework.robot">
<test id="s1-t1" name="Setup" line="2025">
<kw name="Get Current Date" library="DateTime">
<var>${TestSuiteStartTime}</var>
<arg>result_format=%H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20240605 18:01:08.315" level="INFO">${TestSuiteStartTime} = 18:01:08</msg>
<status status="PASS" starttime="20240605 18:01:08.314" endtime="20240605 18:01:08.315"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${TimeStamp}</var>
<arg>result_format=%d_%m_%Y_%H_%M_%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20240605 18:01:08.327" level="INFO">${TimeStamp} = 05_06_2024_18_01_08</msg>
<status status="PASS" starttime="20240605 18:01:08.326" endtime="20240605 18:01:08.328"/>
</kw>
<kw name="Create File" library="OperatingSystem">
<arg>D:\\automation_project\\Test Suite Info\\TestSuiteInfo.json</arg>
<arg>{"report_dir_time_stamp": "${TimeStamp}", "suite_start_time" : "${TestSuiteStartTime}","browser_count": 0, "group_g1": {"total_testcases_count": 0,"failed_testcase_count": 0,"passed_testcase_count": 0,"skipped_testcase_count": 0,"total_scriptfail_count": 0,"total_assertionfail_count": 0,"total_fail_count": 0,"duration": 0, "failed_testcase_info": null},"group_g2": {"total_testcases_count": 0,"failed_testcase_count": 0,"passed_testcase_count": 0,"skipped_testcase_count": 0,"total_scriptfail_count": 0,"total_assertionfail_count": 0,"total_fail_count": 0,"duration": 0, "failed_testcase_info": null},"group_g3": {"total_testcases_count": 0,"failed_testcase_count": 0,"passed_testcase_count": 0,"skipped_testcase_count": 0,"total_scriptfail_count": 0,"total_assertionfail_count": 0,"total_fail_count": 0,"duration": 0, "failed_testcase_info": null},"group_g4": {"total_testcases_count": 0,"failed_testcase_count": 0,"passed_testcase_count": 0,"skipped_testcase_count": 0,"total_scriptfail_count": 0,"total_assertionfail_count": 0,"total_fail_count": 0,"duration": 0, "failed_testcase_info": null},"group_g5": {"total_testcases_count": 0,"failed_testcase_count": 0,"passed_testcase_count": 0,"skipped_testcase_count": 0,"total_scriptfail_count": 0,"total_assertionfail_count": 0,"total_fail_count": 0,"duration": 0, "failed_testcase_info": null}, "variables": {}, "excel_data": {}, "query_results": {}, "file_or_dir_size": {}, "system_info": null, "math_results": {}, "process_status": {}, "process_info": {}, "all_running_processes": null, "python_execution_results": {}, "javascript_execution_results": {}, "encrypted_data": {}, "decrypted_data": {}, "fake_test_data": {}}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20240605 18:01:08.331" level="INFO" html="true">Created file '&lt;a href="file://D:\automation_project\Test Suite Info\TestSuiteInfo.json"&gt;D:\automation_project\Test Suite Info\TestSuiteInfo.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20240605 18:01:08.328" endtime="20240605 18:01:08.332"/>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<arg>D:\\automation_project\\VideoRec_Info</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20240605 18:01:08.333" level="INFO" html="true">Directory '&lt;a href="file://D:\automation_project\VideoRec_Info"&gt;D:\automation_project\VideoRec_Info&lt;/a&gt;' already exists.</msg>
<status status="PASS" starttime="20240605 18:01:08.332" endtime="20240605 18:01:08.333"/>
</kw>
<kw name="Remove Temp Files">
<arg>Temp,WorkBook Check Points,Execution Check Points,VideoRec_Info</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${DirList}</var>
<arg>"${Directories}".split(",")</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240605 18:01:08.336" level="INFO">${DirList} = ['Temp', 'WorkBook Check Points', 'Execution Check Points', 'VideoRec_Info']</msg>
<status status="PASS" starttime="20240605 18:01:08.335" endtime="20240605 18:01:08.336"/>
</kw>
<for flavor="IN">
<var>${dir}</var>
<value>@{DirList}</value>
<iter>
<var name="${dir}">Temp</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${DirExist}</var>
<arg>OperatingSystem.Directory Should Exist</arg>
<arg>D:\\automation_project\\${dir}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Directory Should Exist" library="OperatingSystem">
<arg>D:\\automation_project\\${dir}</arg>
<doc>Fails unless the given path points to an existing directory.</doc>
<msg timestamp="20240605 18:01:08.340" level="INFO" html="true">Directory '&lt;a href="file://D:\automation_project\Temp"&gt;D:\automation_project\Temp&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20240605 18:01:08.338" endtime="20240605 18:01:08.341"/>
</kw>
<msg timestamp="20240605 18:01:08.341" level="INFO">${DirExist} = ('PASS', None)</msg>
<status status="PASS" starttime="20240605 18:01:08.338" endtime="20240605 18:01:08.341"/>
</kw>
<if>
<branch type="IF" condition="&quot;${DirExist}[0]&quot; == &quot;PASS&quot;">
<kw name="List Files In Directory" library="OperatingSystem">
<var>${Files}</var>
<arg>D:\\automation_project\\${dir}</arg>
<arg>absolute=true</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<msg timestamp="20240605 18:01:08.343" level="INFO" html="true">Listing contents of directory '&lt;a href="file://D:\automation_project\Temp"&gt;D:\automation_project\Temp&lt;/a&gt;'.</msg>
<msg timestamp="20240605 18:01:08.344" level="INFO">0 files:
</msg>
<msg timestamp="20240605 18:01:08.344" level="INFO">${Files} = []</msg>
<status status="PASS" starttime="20240605 18:01:08.342" endtime="20240605 18:01:08.344"/>
</kw>
<for flavor="IN">
<var>${file}</var>
<value>@{Files}</value>
<iter>
<var name="${file}"/>
<kw name="Remove File" library="OperatingSystem">
<arg>${file}</arg>
<doc>Removes a file with the given path.</doc>
<status status="NOT RUN" starttime="20240605 18:01:08.346" endtime="20240605 18:01:08.346"/>
</kw>
<status status="NOT RUN" starttime="20240605 18:01:08.345" endtime="20240605 18:01:08.346"/>
</iter>
<status status="NOT RUN" starttime="20240605 18:01:08.344" endtime="20240605 18:01:08.346"/>
</for>
<status status="PASS" starttime="20240605 18:01:08.342" endtime="20240605 18:01:08.347"/>
</branch>
<status status="PASS" starttime="20240605 18:01:08.341" endtime="20240605 18:01:08.347"/>
</if>
<status status="PASS" starttime="20240605 18:01:08.337" endtime="20240605 18:01:08.347"/>
</iter>
<iter>
<var name="${dir}">WorkBook Check Points</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${DirExist}</var>
<arg>OperatingSystem.Directory Should Exist</arg>
<arg>D:\\automation_project\\${dir}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Directory Should Exist" library="OperatingSystem">
<arg>D:\\automation_project\\${dir}</arg>
<doc>Fails unless the given path points to an existing directory.</doc>
<msg timestamp="20240605 18:01:08.351" level="INFO" html="true">Directory '&lt;a href="file://D:\automation_project\WorkBook Check Points"&gt;D:\automation_project\WorkBook Check Points&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20240605 18:01:08.350" endtime="20240605 18:01:08.351"/>
</kw>
<msg timestamp="20240605 18:01:08.351" level="INFO">${DirExist} = ('PASS', None)</msg>
<status status="PASS" starttime="20240605 18:01:08.348" endtime="20240605 18:01:08.352"/>
</kw>
<if>
<branch type="IF" condition="&quot;${DirExist}[0]&quot; == &quot;PASS&quot;">
<kw name="List Files In Directory" library="OperatingSystem">
<var>${Files}</var>
<arg>D:\\automation_project\\${dir}</arg>
<arg>absolute=true</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<msg timestamp="20240605 18:01:08.354" level="INFO" html="true">Listing contents of directory '&lt;a href="file://D:\automation_project\WorkBook Check Points"&gt;D:\automation_project\WorkBook Check Points&lt;/a&gt;'.</msg>
<msg timestamp="20240605 18:01:08.354" level="INFO">2 files:
D:\automation_project\WorkBook Check Points\IBorgDataDrivenControl1_WorkBook_Closed.txt
D:\automation_project\WorkBook Check Points\Setup_WorkBook_Closed.txt</msg>
<msg timestamp="20240605 18:01:08.355" level="INFO">${Files} = ['D:\\automation_project\\WorkBook Check Points\\IBorgDataDrivenControl1_WorkBook_Closed.txt', 'D:\\automation_project\\WorkBook Check Points\\Setup_WorkBook_Closed.txt']</msg>
<status status="PASS" starttime="20240605 18:01:08.353" endtime="20240605 18:01:08.355"/>
</kw>
<for flavor="IN">
<var>${file}</var>
<value>@{Files}</value>
<iter>
<var name="${file}">D:\automation_project\WorkBook Check Points\IBorgDataDrivenControl1_WorkBook_Closed.txt</var>
<kw name="Remove File" library="OperatingSystem">
<arg>${file}</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20240605 18:01:08.358" level="INFO" html="true">Removed file '&lt;a href="file://D:\automation_project\WorkBook Check Points\IBorgDataDrivenControl1_WorkBook_Closed.txt"&gt;D:\automation_project\WorkBook Check Points\IBorgDataDrivenControl1_WorkBook_Closed.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20240605 18:01:08.356" endtime="20240605 18:01:08.358"/>
</kw>
<status status="PASS" starttime="20240605 18:01:08.356" endtime="20240605 18:01:08.358"/>
</iter>
<iter>
<var name="${file}">D:\automation_project\WorkBook Check Points\Setup_WorkBook_Closed.txt</var>
<kw name="Remove File" library="OperatingSystem">
<arg>${file}</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20240605 18:01:08.368" level="INFO" html="true">Removed file '&lt;a href="file://D:\automation_project\WorkBook Check Points\Setup_WorkBook_Closed.txt"&gt;D:\automation_project\WorkBook Check Points\Setup_WorkBook_Closed.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20240605 18:01:08.359" endtime="20240605 18:01:08.368"/>
</kw>
<status status="PASS" starttime="20240605 18:01:08.359" endtime="20240605 18:01:08.369"/>
</iter>
<status status="PASS" starttime="20240605 18:01:08.355" endtime="20240605 18:01:08.369"/>
</for>
<status status="PASS" starttime="20240605 18:01:08.352" endtime="20240605 18:01:08.369"/>
</branch>
<status status="PASS" starttime="20240605 18:01:08.352" endtime="20240605 18:01:08.369"/>
</if>
<status status="PASS" starttime="20240605 18:01:08.347" endtime="20240605 18:01:08.369"/>
</iter>
<iter>
<var name="${dir}">Execution Check Points</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${DirExist}</var>
<arg>OperatingSystem.Directory Should Exist</arg>
<arg>D:\\automation_project\\${dir}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Directory Should Exist" library="OperatingSystem">
<arg>D:\\automation_project\\${dir}</arg>
<doc>Fails unless the given path points to an existing directory.</doc>
<msg timestamp="20240605 18:01:08.373" level="INFO" html="true">Directory '&lt;a href="file://D:\automation_project\Execution Check Points"&gt;D:\automation_project\Execution Check Points&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20240605 18:01:08.372" endtime="20240605 18:01:08.373"/>
</kw>
<msg timestamp="20240605 18:01:08.373" level="INFO">${DirExist} = ('PASS', None)</msg>
<status status="PASS" starttime="20240605 18:01:08.371" endtime="20240605 18:01:08.374"/>
</kw>
<if>
<branch type="IF" condition="&quot;${DirExist}[0]&quot; == &quot;PASS&quot;">
<kw name="List Files In Directory" library="OperatingSystem">
<var>${Files}</var>
<arg>D:\\automation_project\\${dir}</arg>
<arg>absolute=true</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<msg timestamp="20240605 18:01:08.376" level="INFO" html="true">Listing contents of directory '&lt;a href="file://D:\automation_project\Execution Check Points"&gt;D:\automation_project\Execution Check Points&lt;/a&gt;'.</msg>
<msg timestamp="20240605 18:01:08.376" level="INFO">1 file:
D:\automation_project\Execution Check Points\IBorgDataDrivenControl1_Execution_Completed.txt</msg>
<msg timestamp="20240605 18:01:08.376" level="INFO">${Files} = ['D:\\automation_project\\Execution Check Points\\IBorgDataDrivenControl1_Execution_Completed.txt']</msg>
<status status="PASS" starttime="20240605 18:01:08.375" endtime="20240605 18:01:08.376"/>
</kw>
<for flavor="IN">
<var>${file}</var>
<value>@{Files}</value>
<iter>
<var name="${file}">D:\automation_project\Execution Check Points\IBorgDataDrivenControl1_Execution_Completed.txt</var>
<kw name="Remove File" library="OperatingSystem">
<arg>${file}</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20240605 18:01:08.379" level="INFO" html="true">Removed file '&lt;a href="file://D:\automation_project\Execution Check Points\IBorgDataDrivenControl1_Execution_Completed.txt"&gt;D:\automation_project\Execution Check Points\IBorgDataDrivenControl1_Execution_Completed.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20240605 18:01:08.378" endtime="20240605 18:01:08.380"/>
</kw>
<status status="PASS" starttime="20240605 18:01:08.377" endtime="20240605 18:01:08.380"/>
</iter>
<status status="PASS" starttime="20240605 18:01:08.377" endtime="20240605 18:01:08.380"/>
</for>
<status status="PASS" starttime="20240605 18:01:08.374" endtime="20240605 18:01:08.380"/>
</branch>
<status status="PASS" starttime="20240605 18:01:08.374" endtime="20240605 18:01:08.381"/>
</if>
<status status="PASS" starttime="20240605 18:01:08.371" endtime="20240605 18:01:08.382"/>
</iter>
<iter>
<var name="${dir}">VideoRec_Info</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${DirExist}</var>
<arg>OperatingSystem.Directory Should Exist</arg>
<arg>D:\\automation_project\\${dir}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Directory Should Exist" library="OperatingSystem">
<arg>D:\\automation_project\\${dir}</arg>
<doc>Fails unless the given path points to an existing directory.</doc>
<msg timestamp="20240605 18:01:08.384" level="INFO" html="true">Directory '&lt;a href="file://D:\automation_project\VideoRec_Info"&gt;D:\automation_project\VideoRec_Info&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20240605 18:01:08.383" endtime="20240605 18:01:08.385"/>
</kw>
<msg timestamp="20240605 18:01:08.385" level="INFO">${DirExist} = ('PASS', None)</msg>
<status status="PASS" starttime="20240605 18:01:08.383" endtime="20240605 18:01:08.385"/>
</kw>
<if>
<branch type="IF" condition="&quot;${DirExist}[0]&quot; == &quot;PASS&quot;">
<kw name="List Files In Directory" library="OperatingSystem">
<var>${Files}</var>
<arg>D:\\automation_project\\${dir}</arg>
<arg>absolute=true</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<msg timestamp="20240605 18:01:08.387" level="INFO" html="true">Listing contents of directory '&lt;a href="file://D:\automation_project\VideoRec_Info"&gt;D:\automation_project\VideoRec_Info&lt;/a&gt;'.</msg>
<msg timestamp="20240605 18:01:08.388" level="INFO">0 files:
</msg>
<msg timestamp="20240605 18:01:08.388" level="INFO">${Files} = []</msg>
<status status="PASS" starttime="20240605 18:01:08.386" endtime="20240605 18:01:08.388"/>
</kw>
<for flavor="IN">
<var>${file}</var>
<value>@{Files}</value>
<iter>
<var name="${file}"/>
<kw name="Remove File" library="OperatingSystem">
<arg>${file}</arg>
<doc>Removes a file with the given path.</doc>
<status status="NOT RUN" starttime="20240605 18:01:08.389" endtime="20240605 18:01:08.390"/>
</kw>
<status status="NOT RUN" starttime="20240605 18:01:08.389" endtime="20240605 18:01:08.390"/>
</iter>
<status status="NOT RUN" starttime="20240605 18:01:08.388" endtime="20240605 18:01:08.390"/>
</for>
<status status="PASS" starttime="20240605 18:01:08.386" endtime="20240605 18:01:08.390"/>
</branch>
<status status="PASS" starttime="20240605 18:01:08.385" endtime="20240605 18:01:08.390"/>
</if>
<status status="PASS" starttime="20240605 18:01:08.382" endtime="20240605 18:01:08.392"/>
</iter>
<status status="PASS" starttime="20240605 18:01:08.336" endtime="20240605 18:01:08.392"/>
</for>
<status status="PASS" starttime="20240605 18:01:08.334" endtime="20240605 18:01:08.392"/>
</kw>
<kw name="Open Workbook" library="ExcellentLibrary">
<arg>${IBorgTemplatePath}</arg>
<doc>Opens the workbook found at the given file path.
_NOTE_: Please note that at present _XLS_ files are not supported.</doc>
<msg timestamp="20240605 18:01:08.939" level="INFO">d:\iborg\iborgagentsetup2.1.6\iborgagentsetup2.1.6\iborgenv\lib\site-packages\openpyxl\worksheet\_reader.py:329: UserWarning: Data Validation extension is not supported and will be removed
  warn(msg)</msg>
<status status="PASS" starttime="20240605 18:01:08.393" endtime="20240605 18:01:08.940"/>
</kw>
<kw name="Switch Sheet" library="ExcellentLibrary">
<arg>Execution Handler</arg>
<doc>Switches to the sheet with the supplied name within the active
workbook.</doc>
<status status="PASS" starttime="20240605 18:01:08.940" endtime="20240605 18:01:08.940"/>
</kw>
<kw name="Read Sheet Data" library="ExcellentLibrary">
<var>${SheetData}</var>
<arg>get_column_names_from_header_row=True</arg>
<doc>Reads all the data from the active sheet.</doc>
<msg timestamp="20240605 18:01:08.948" level="INFO">${SheetData} = [{'Test Case ID': 'AW01', 'Execution Flag': 'Yes', 'Group': 'G1', 'Remarks': None, 'change': None, None: None}, {'Test Case ID': 'AW02', 'Execution Flag': 'Yes', 'Group': 'G1', 'Remarks': None, 'chang...</msg>
<status status="PASS" starttime="20240605 18:01:08.941" endtime="20240605 18:01:08.948"/>
</kw>
<kw name="Create File" library="OperatingSystem">
<arg>D:\\automation_project\\WorkBook Check Points\\${TEST NAME}_WorkBook_Closed.txt</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20240605 18:01:08.951" level="INFO" html="true">Created file '&lt;a href="file://D:\automation_project\WorkBook Check Points\Setup_WorkBook_Closed.txt"&gt;D:\automation_project\WorkBook Check Points\Setup_WorkBook_Closed.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20240605 18:01:08.948" endtime="20240605 18:01:08.951"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${GroupCount}</var>
<arg>set(row['Group'] for row in ${SheetData} if row['Execution Flag'].upper().strip() == "YES")</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240605 18:01:08.965" level="INFO">${GroupCount} = {'G1'}</msg>
<status status="PASS" starttime="20240605 18:01:08.951" endtime="20240605 18:01:08.965"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<arg>$GroupCount.discard(None)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" starttime="20240605 18:01:08.965" endtime="20240605 18:01:08.966"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${BrowserCount}</var>
<arg>len(${GroupCount})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240605 18:01:08.968" level="INFO">${BrowserCount} = 1</msg>
<status status="PASS" starttime="20240605 18:01:08.967" endtime="20240605 18:01:08.968"/>
</kw>
<kw name="Add To Json" library="Utilities">
<arg>browser_count</arg>
<arg>nokey</arg>
<arg>${BrowserCount}</arg>
<status status="PASS" starttime="20240605 18:01:08.968" endtime="20240605 18:01:08.970"/>
</kw>
<kw name="Test Suite Info Handler">
<kw name="Switch Sheet" library="ExcellentLibrary">
<arg>Test Suite Info</arg>
<doc>Switches to the sheet with the supplied name within the active
workbook.</doc>
<status status="PASS" starttime="20240605 18:01:08.971" endtime="20240605 18:01:08.973"/>
</kw>
<kw name="Read Sheet Data" library="ExcellentLibrary">
<var>${SheetData}</var>
<arg>get_column_names_from_header_row=True</arg>
<doc>Reads all the data from the active sheet.</doc>
<msg timestamp="20240605 18:01:08.976" level="INFO">${SheetData} = [{'Automation Type': 'Web', 'Application Name': 'IDOCX', 'Application Version': '0.0.2.7', 'Browser': 'Chrome', 'Operating System': 'Windows', 'Operating System Version': '10', 'URL': 'http://103.171....</msg>
<status status="PASS" starttime="20240605 18:01:08.973" endtime="20240605 18:01:08.976"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${SuiteinfoList}</var>
<arg>$sheetdata[0]</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240605 18:01:08.977" level="INFO">${SuiteinfoList} = {'Automation Type': 'Web', 'Application Name': 'IDOCX', 'Application Version': '0.0.2.7', 'Browser': 'Chrome', 'Operating System': 'Windows', 'Operating System Version': '10', 'URL': 'http://103.171.9...</msg>
<status status="PASS" starttime="20240605 18:01:08.976" endtime="20240605 18:01:08.977"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SuiteinfoList}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240605 18:01:08.979" level="INFO">${SuiteinfoList} = {'Automation Type': 'Web', 'Application Name': 'IDOCX', 'Application Version': '0.0.2.7', 'Browser': 'Chrome', 'Operating System': 'Windows', 'Operating System Version': '10', 'URL': 'http://103.171.9...</msg>
<status status="PASS" starttime="20240605 18:01:08.978" endtime="20240605 18:01:08.979"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${AutomationType}</arg>
<arg>${SuiteinfoList['Automation Type']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240605 18:01:08.987" level="INFO">${AutomationType} = Web</msg>
<status status="PASS" starttime="20240605 18:01:08.980" endtime="20240605 18:01:08.987"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${ApplicationName}</arg>
<arg>${SuiteinfoList['Application Name']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240605 18:01:08.993" level="INFO">${ApplicationName} = IDOCX</msg>
<status status="PASS" starttime="20240605 18:01:08.988" endtime="20240605 18:01:08.993"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${ApplicationVersion}</arg>
<arg>${SuiteinfoList['Application Version']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240605 18:01:09.001" level="INFO">${ApplicationVersion} = 0.0.2.7</msg>
<status status="PASS" starttime="20240605 18:01:08.993" endtime="20240605 18:01:09.001"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OperatingSystem}</arg>
<arg>${SuiteinfoList['Operating System']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240605 18:01:09.005" level="INFO">${OperatingSystem} = Windows</msg>
<status status="PASS" starttime="20240605 18:01:09.001" endtime="20240605 18:01:09.006"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Environment}</arg>
<arg>${SuiteinfoList['Environment']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240605 18:01:09.012" level="INFO">${Environment} = Test</msg>
<status status="PASS" starttime="20240605 18:01:09.006" endtime="20240605 18:01:09.012"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SendEmail}</arg>
<arg>${SuiteinfoList['Receive Report via Email?']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240605 18:01:09.018" level="INFO">${SendEmail} = Yes</msg>
<status status="PASS" starttime="20240605 18:01:09.012" endtime="20240605 18:01:09.018"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Email}</arg>
<arg>${SuiteinfoList['Email']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240605 18:01:09.025" level="INFO">${Email} = narasimha@sirmaindia.com</msg>
<status status="PASS" starttime="20240605 18:01:09.018" endtime="20240605 18:01:09.025"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RegressionTest}</arg>
<arg>${SuiteinfoList['Is this Regression test?']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240605 18:01:09.034" level="INFO">${RegressionTest} = Yes</msg>
<status status="PASS" starttime="20240605 18:01:09.025" endtime="20240605 18:01:09.034"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${GenerateReport}</arg>
<arg>${SuiteinfoList['Generate daily report']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240605 18:01:09.041" level="INFO">${GenerateReport} = Yes</msg>
<status status="PASS" starttime="20240605 18:01:09.035" endtime="20240605 18:01:09.042"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${ReportPath}</arg>
<arg>${SuiteinfoList['Report Path']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240605 18:01:09.049" level="INFO">${ReportPath} = D:\automation_project</msg>
<status status="PASS" starttime="20240605 18:01:09.042" endtime="20240605 18:01:09.049"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RecordScreen}</arg>
<arg>${SuiteinfoList['Video Recording']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240605 18:01:09.052" level="INFO">${RecordScreen} = No</msg>
<status status="PASS" starttime="20240605 18:01:09.049" endtime="20240605 18:01:09.052"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${DataSource}</arg>
<arg>${SuiteinfoList['Data Source']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240605 18:01:09.060" level="INFO">${DataSource} = Excel</msg>
<status status="PASS" starttime="20240605 18:01:09.052" endtime="20240605 18:01:09.060"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${VideoRecPath}</arg>
<arg>${SuiteinfoList['Video Recording path']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240605 18:01:09.068" level="INFO">${VideoRecPath} = C:\\Projects\\automation_project</msg>
<status status="PASS" starttime="20240605 18:01:09.060" endtime="20240605 18:01:09.068"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ReportPath}&quot;.strip() == &quot;&quot; or &quot;${ReportPath}&quot;.strip() == &quot;None&quot;">
<kw name="Fail" library="BuiltIn">
<arg>The report path must not be left blank. Kindly specify a directory path in the Excel sheet for storing the reports.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240605 18:01:09.069" endtime="20240605 18:01:09.070"/>
</kw>
<status status="NOT RUN" starttime="20240605 18:01:09.069" endtime="20240605 18:01:09.070"/>
</branch>
<status status="PASS" starttime="20240605 18:01:09.068" endtime="20240605 18:01:09.070"/>
</if>
<if>
<branch type="IF" condition="&quot;${AutomationType}&quot; == &quot;Web&quot;">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${URL}</arg>
<arg>${SuiteinfoList['URL']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240605 18:01:09.079" level="INFO">${URL} = http://103.171.98.14:9068/login</msg>
<status status="PASS" starttime="20240605 18:01:09.071" endtime="20240605 18:01:09.079"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Browser}</arg>
<arg>${SuiteinfoList['Browser']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240605 18:01:09.086" level="INFO">${Browser} = Chrome</msg>
<status status="PASS" starttime="20240605 18:01:09.079" endtime="20240605 18:01:09.086"/>
</kw>
<status status="PASS" starttime="20240605 18:01:09.071" endtime="20240605 18:01:09.088"/>
</branch>
<branch type="ELSE">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OperatingSystemVersion}</arg>
<arg>${SuiteinfoList['Operating System Version']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240605 18:01:09.089" endtime="20240605 18:01:09.089"/>
</kw>
<status status="NOT RUN" starttime="20240605 18:01:09.088" endtime="20240605 18:01:09.089"/>
</branch>
<status status="PASS" starttime="20240605 18:01:09.070" endtime="20240605 18:01:09.089"/>
</if>
<status status="PASS" starttime="20240605 18:01:08.971" endtime="20240605 18:01:09.090"/>
</kw>
<kw name="Close Workbook" library="ExcellentLibrary">
<doc>Closes the workbook identified by the supplied alias.</doc>
<status status="PASS" starttime="20240605 18:01:09.090" endtime="20240605 18:01:09.091"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${RecordPath}</var>
<arg>${ReportPath}\\Execution Summary\\Execution_Summary_${TimeStamp}\\screenrecord.mp4</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240605 18:01:09.092" level="INFO">${RecordPath} = D:\automation_project\Execution Summary\Execution_Summary_05_06_2024_18_01_08\screenrecord.mp4</msg>
<status status="PASS" starttime="20240605 18:01:09.091" endtime="20240605 18:01:09.092"/>
</kw>
<kw name="Normalize Path" library="OperatingSystem">
<var>${RecordPath}</var>
<arg>${RecordPath}</arg>
<doc>Normalizes the given path.</doc>
<msg timestamp="20240605 18:01:09.093" level="INFO">${RecordPath} = D:\automation_project\Execution Summary\Execution_Summary_05_06_2024_18_01_08\screenrecord.mp4</msg>
<status status="PASS" starttime="20240605 18:01:09.092" endtime="20240605 18:01:09.093"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RecordPath}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240605 18:01:09.094" level="INFO">${RecordPath} = D:\automation_project\Execution Summary\Execution_Summary_05_06_2024_18_01_08\screenrecord.mp4</msg>
<status status="PASS" starttime="20240605 18:01:09.094" endtime="20240605 18:01:09.095"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RecordScreen}&quot;==&quot;Yes&quot;">
<kw name="Create File" library="OperatingSystem">
<arg>D:\\automation_project\\VideoRec_Info\\StartRecording.txt</arg>
<arg>"${RecordPath}"</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="NOT RUN" starttime="20240605 18:01:09.096" endtime="20240605 18:01:09.096"/>
</kw>
<kw name="Import Library" library="BuiltIn">
<arg>D:\\New Framework\\Newfwrk_V2.0\\videorec.py</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<status status="NOT RUN" starttime="20240605 18:01:09.096" endtime="20240605 18:01:09.097"/>
</kw>
<status status="NOT RUN" starttime="20240605 18:01:09.095" endtime="20240605 18:01:09.097"/>
</branch>
<status status="PASS" starttime="20240605 18:01:09.095" endtime="20240605 18:01:09.097"/>
</if>
<status status="PASS" starttime="20240605 18:01:08.312" endtime="20240605 18:01:09.097"/>
</test>
<status status="PASS" starttime="20240605 18:01:03.838" endtime="20240605 18:01:09.100"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Excel Driven Framework">Excel Driven Framework</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
